{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SCookieBar from './style';\nimport { Button, Flex } from '../styles';\nimport Wysiwyg from '../Wysiwyg';\n\nvar CookieBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CookieBar, _React$Component);\n\n  function CookieBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CookieBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CookieBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showCookie: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cookieTimeout\", 33696000000);\n\n    _defineProperty(_assertThisInitialized(_this), \"cookieName\", 'glamrockHasConsent');\n\n    _defineProperty(_assertThisInitialized(_this), \"hasConsent\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          cookieName = _assertThisInitialize.cookieName;\n\n      var isCookieSetTo = function isCookieSetTo(value) {\n        return document.cookie.indexOf(\"\".concat(cookieName, \"=\").concat(value)) > -1;\n      };\n\n      _this.setState({\n        showCookie: !isCookieSetTo('true')\n      });\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"acceptCookie\", function () {\n      _this.setState({\n        showCookie: false\n      });\n\n      _this.setConsent(true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"rejectCookie\", function (consent) {\n      _this.setState({\n        showCookie: true\n      });\n\n      _this.setConsent(false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setConsent\", function (consent) {\n      _this.setCookie(_this.cookieName, consent);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setCookie\", function (name, value) {\n      var date = new Date();\n      date.setTime(date.getTime() + _this.cookieTimeout);\n      document.cookie = \"\".concat(name, \"=\").concat(value, \";expires=\").concat(date.toGMTString(), \";path=/\");\n    });\n\n    return _this;\n  }\n\n  _createClass(CookieBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.hasConsent();\n    }\n    /*\n     * Check if user already consent\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var showCookie = this.state.showCookie;\n      var _this$props = this.props,\n          text = _this$props.text,\n          btnText = _this$props.btnText;\n      return __jsx(SCookieBar, {\n        className: \"cookie-bar \".concat(showCookie ? 'show' : 'hide'),\n        showCookie: showCookie\n      }, __jsx(Flex, {\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        bg: \"purple\"\n      }, __jsx(Wysiwyg, {\n        color: \"white\",\n        content: text\n      }), __jsx(Button, {\n        ml: 10,\n        onClick: this.acceptCookie\n      }, btnText)));\n    }\n  }]);\n\n  return CookieBar;\n}(React.Component);\n\nCookieBar.propTypes = {\n  text: PropTypes.string,\n  btnText: PropTypes.string\n};\nCookieBar.defaultProps = {\n  btnText: 'Accepteren',\n  text: ''\n};\nexport default CookieBar;","map":{"version":3,"sources":["/Users/stefwinterswijk/Werk/dept/src/components/CookieBar/CookieBar.jsx"],"names":["React","PropTypes","SCookieBar","Button","Flex","Wysiwyg","CookieBar","showCookie","cookieName","isCookieSetTo","value","document","cookie","indexOf","setState","setConsent","consent","setCookie","name","date","Date","setTime","getTime","cookieTimeout","toGMTString","hasConsent","state","props","text","btnText","acceptCookie","Component","propTypes","string","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,SAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,WAA7B;AACA,OAAOC,OAAP,MAAoB,YAApB;;IAEMC,S;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,UAAU,EAAE;AADN,K;;oEAIQ,W;;iEAEH,oB;;iEASA,YAAM;AAAA;AAAA,UACTC,UADS,yBACTA,UADS;;AAEjB,UAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,eAAWC,QAAQ,CAACC,MAAT,CAAgBC,OAAhB,WAA2BL,UAA3B,cAAyCE,KAAzC,KAAoD,CAAC,CAAhE;AAAA,OAAtB;;AAEA,YAAKI,QAAL,CAAc;AAAEP,QAAAA,UAAU,EAAE,CAACE,aAAa,CAAC,MAAD;AAA5B,OAAd;;AAEA,aAAO,IAAP;AACD,K;;mEAKc,YAAM;AACnB,YAAKK,QAAL,CAAc;AAAEP,QAAAA,UAAU,EAAE;AAAd,OAAd;;AACA,YAAKQ,UAAL,CAAgB,IAAhB;AACD,K;;mEAKc,UAACC,OAAD,EAAa;AAC1B,YAAKF,QAAL,CAAc;AAAEP,QAAAA,UAAU,EAAE;AAAd,OAAd;;AACA,YAAKQ,UAAL,CAAgB,KAAhB;AACD,K;;iEAKY,UAACC,OAAD,EAAa;AACxB,YAAKC,SAAL,CAAe,MAAKT,UAApB,EAAgCQ,OAAhC;AACD,K;;gEAKW,UAACE,IAAD,EAAOR,KAAP,EAAiB;AAC3B,UAAMS,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiB,MAAKC,aAAnC;AAEAZ,MAAAA,QAAQ,CAACC,MAAT,aAAqBM,IAArB,cAA6BR,KAA7B,sBAA8CS,IAAI,CAACK,WAAL,EAA9C;AACD,K;;;;;;;wCA/CmB;AAClB,WAAKC,UAAL;AACD;AAED;;;;;;6BA6CS;AAAA,UACClB,UADD,GACgB,KAAKmB,KADrB,CACCnB,UADD;AAAA,wBAEmB,KAAKoB,KAFxB;AAAA,UAECC,IAFD,eAECA,IAFD;AAAA,UAEOC,OAFP,eAEOA,OAFP;AAGP,aACE,MAAC,UAAD;AAAY,QAAA,SAAS,uBAAgBtB,UAAU,GAAG,MAAH,GAAY,MAAtC,CAArB;AAAqE,QAAA,UAAU,EAAEA;AAAjF,SACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,UAAU,EAAC,QAAjC;AAA0C,QAAA,cAAc,EAAC,QAAzD;AAAkE,QAAA,EAAE,EAAC;AAArE,SACE,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,OAAf;AAAuB,QAAA,OAAO,EAAEqB;AAAhC,QADF,EAEE,MAAC,MAAD;AAAQ,QAAA,EAAE,EAAE,EAAZ;AAAgB,QAAA,OAAO,EAAE,KAAKE;AAA9B,SACGD,OADH,CAFF,CADF,CADF;AAUD;;;;EAvEqB7B,KAAK,CAAC+B,S;;AA0E9BzB,SAAS,CAAC0B,SAAV,GAAsB;AACpBJ,EAAAA,IAAI,EAAE3B,SAAS,CAACgC,MADI;AAEpBJ,EAAAA,OAAO,EAAE5B,SAAS,CAACgC;AAFC,CAAtB;AAKA3B,SAAS,CAAC4B,YAAV,GAAyB;AACvBL,EAAAA,OAAO,EAAE,YADc;AAEvBD,EAAAA,IAAI,EAAE;AAFiB,CAAzB;AAKA,eAAetB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SCookieBar from './style';\nimport { Button, Flex } from '../styles';\nimport Wysiwyg from '../Wysiwyg';\n\nclass CookieBar extends React.Component {\n  state = {\n    showCookie: false,\n  };\n\n  cookieTimeout = 33696000000; // 13 months in milliseconds\n\n  cookieName = 'glamrockHasConsent';\n\n  componentDidMount() {\n    this.hasConsent();\n  }\n\n  /*\n   * Check if user already consent\n   */\n  hasConsent = () => {\n    const { cookieName } = this;\n    const isCookieSetTo = (value) => document.cookie.indexOf(`${cookieName}=${value}`) > -1;\n\n    this.setState({ showCookie: !isCookieSetTo('true') });\n\n    return null;\n  };\n\n  /*\n   * Accept cookie\n   */\n  acceptCookie = () => {\n    this.setState({ showCookie: false });\n    this.setConsent(true);\n  };\n\n  /*\n   * Reject cookie\n   */\n  rejectCookie = (consent) => {\n    this.setState({ showCookie: true });\n    this.setConsent(false);\n  };\n\n  /*\n   * Set consent cookie\n   */\n  setConsent = (consent) => {\n    this.setCookie(this.cookieName, consent);\n  };\n\n  /**\n   * Write cookieBar's cookie when user accepts cookies\n   */\n  setCookie = (name, value) => {\n    const date = new Date();\n    date.setTime(date.getTime() + this.cookieTimeout);\n\n    document.cookie = `${name}=${value};expires=${date.toGMTString()};path=/`;\n  };\n\n  render() {\n    const { showCookie } = this.state;\n    const { text, btnText } = this.props;\n    return (\n      <SCookieBar className={`cookie-bar ${showCookie ? 'show' : 'hide'}`} showCookie={showCookie}>\n        <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent=\"center\" bg=\"purple\">\n          <Wysiwyg color=\"white\" content={text} />\n          <Button ml={10} onClick={this.acceptCookie}>\n            {btnText}\n          </Button>\n        </Flex>\n      </SCookieBar>\n    );\n  }\n}\n\nCookieBar.propTypes = {\n  text: PropTypes.string,\n  btnText: PropTypes.string,\n};\n\nCookieBar.defaultProps = {\n  btnText: 'Accepteren',\n  text: '',\n};\n\nexport default CookieBar;\n"]},"metadata":{},"sourceType":"module"}