{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid'; // Inputs\n\nimport { TextInput, TextArea, Email } from './Fields'; // Styling\n\nimport { Box, Button, Flex } from '../styles';\nimport theme from '../../theme';\n\nvar Form = function Form(_ref) {\n  var fields = _ref.fields,\n      button = _ref.button,\n      _onSubmit = _ref.onSubmit;\n  return __jsx(Box, {\n    as: \"form\",\n    onSubmit: function onSubmit(e) {\n      return _onSubmit(e);\n    }\n  }, fields && __jsx(Flex, {\n    flexWrap: \"wrap\"\n  }, fields.map(function (field) {\n    switch (field.type) {\n      case 'text':\n        return __jsx(TextInput, _extends({\n          key: uuid()\n        }, field));\n\n      case 'textarea':\n        return __jsx(TextArea, _extends({\n          key: uuid()\n        }, field));\n\n      case 'email':\n        return __jsx(Email, _extends({\n          key: uuid()\n        }, field));\n\n      default:\n        console.warn('missing layout for', field.type);\n        return null;\n    }\n  })), button && __jsx(Box, {\n    ml: 25,\n    mt: 30\n  }, __jsx(Button, {\n    type: button.type,\n    bg: theme.colors.blue\n  }, button.text)));\n};\n\nForm.propTypes = {\n  fields: PropTypes.arrayOf(PropTypes.object).isRequired,\n  button: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\nexport default Form;","map":{"version":3,"sources":["/Users/stefwinterswijk/Werk/dept/src/components/Form/Form.jsx"],"names":["React","PropTypes","uuid","TextInput","TextArea","Email","Box","Button","Flex","theme","Form","fields","button","onSubmit","e","map","field","type","console","warn","colors","blue","text","propTypes","arrayOf","object","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,KAA9B,QAA2C,UAA3C,C,CAEA;;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,QAAkC,WAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,MAAWC,MAAX,QAAWA,MAAX;AAAA,MAAmBC,SAAnB,QAAmBA,QAAnB;AAAA,SACX,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAID,SAAQ,CAACC,CAAD,CAAZ;AAAA;AAA1B,KACGH,MAAM,IACL,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC;AAAf,KACGA,MAAM,CAACI,GAAP,CAAW,UAAAC,KAAK,EAAI;AACnB,YAAQA,KAAK,CAACC,IAAd;AACE,WAAK,MAAL;AACE,eAAO,MAAC,SAAD;AAAW,UAAA,GAAG,EAAEf,IAAI;AAApB,WAA4Bc,KAA5B,EAAP;;AAEF,WAAK,UAAL;AACE,eAAO,MAAC,QAAD;AAAU,UAAA,GAAG,EAAEd,IAAI;AAAnB,WAA2Bc,KAA3B,EAAP;;AAEF,WAAK,OAAL;AACE,eAAO,MAAC,KAAD;AAAO,UAAA,GAAG,EAAEd,IAAI;AAAhB,WAAwBc,KAAxB,EAAP;;AAEF;AACEE,QAAAA,OAAO,CAACC,IAAR,CAAa,oBAAb,EAAmCH,KAAK,CAACC,IAAzC;AACA,eAAO,IAAP;AAZJ;AAcD,GAfA,CADH,CAFJ,EAqBGL,MAAM,IACL,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE;AAAjB,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA,MAAM,CAACK,IAArB;AAA2B,IAAA,EAAE,EAAER,KAAK,CAACW,MAAN,CAAaC;AAA5C,KACGT,MAAM,CAACU,IADV,CADF,CAtBJ,CADW;AAAA,CAAb;;AAgCAZ,IAAI,CAACa,SAAL,GAAiB;AACfZ,EAAAA,MAAM,EAAEV,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACwB,MAA5B,EAAoCC,UAD7B;AAEfd,EAAAA,MAAM,EAAEX,SAAS,CAACwB,MAAV,CAAiBC,UAFV;AAGfb,EAAAA,QAAQ,EAAEZ,SAAS,CAAC0B,IAAV,CAAeD;AAHV,CAAjB;AAMA,eAAehB,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\n\n// Inputs\nimport { TextInput, TextArea, Email } from './Fields';\n\n// Styling\nimport { Box, Button, Flex } from '../styles';\nimport theme from '../../theme';\n\nconst Form = ({ fields, button, onSubmit }) => (\n  <Box as=\"form\" onSubmit={e => onSubmit(e)}>\n    {fields && (\n      <Flex flexWrap=\"wrap\">\n        {fields.map(field => {\n          switch (field.type) {\n            case 'text':\n              return <TextInput key={uuid()} {...field} />;\n\n            case 'textarea':\n              return <TextArea key={uuid()} {...field} />;\n\n            case 'email':\n              return <Email key={uuid()} {...field} />;\n\n            default:\n              console.warn('missing layout for', field.type);\n              return null;\n          }\n        })}\n      </Flex>\n    )}\n    {button && (\n      <Box ml={25} mt={30}>\n        <Button type={button.type} bg={theme.colors.blue}>\n          {button.text}\n        </Button>\n      </Box>\n    )}\n  </Box>\n);\n\nForm.propTypes = {\n  fields: PropTypes.arrayOf(PropTypes.object).isRequired,\n  button: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}