{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Styling\n\nimport { Flex, FormLabel } from '../../styles';\nimport { STextArea, SError } from './styles';\n\nvar TextArea = function TextArea(_ref) {\n  var _errors$name, _errors$name2;\n\n  var label = _ref.label,\n      id = _ref.id,\n      name = _ref.name,\n      isRequired = _ref.isRequired,\n      width = _ref.width,\n      errors = _ref.errors,\n      props = _objectWithoutProperties(_ref, [\"label\", \"id\", \"name\", \"isRequired\", \"width\", \"errors\"]);\n\n  return __jsx(Flex, {\n    my: [15, 30],\n    px: [0, 25],\n    flexDirection: \"column\",\n    width: width\n  }, label && __jsx(Flex, {\n    alignItems: \"center\"\n  }, __jsx(FormLabel, {\n    htmlFor: id\n  }, isRequired ? label + '*' : label)), __jsx(STextArea, _extends({\n    id: id,\n    name: name\n  }, props)), (errors === null || errors === void 0 ? void 0 : (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message) && __jsx(SError, null, errors === null || errors === void 0 ? void 0 : (_errors$name2 = errors[name]) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message));\n};\n\nTextArea.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.array]),\n  errors: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n};\nTextArea.defaultProps = {\n  label: '',\n  isRequired: false,\n  width: [1, 1 / 2],\n  errors: false\n};\nexport default TextArea;","map":{"version":3,"sources":["/Users/stefwinterswijk/Werk/dept/src/components/Form/Fields/TextArea.jsx"],"names":["React","PropTypes","Flex","FormLabel","STextArea","SError","TextArea","label","id","name","isRequired","width","errors","props","message","propTypes","string","bool","oneOfType","number","array","object","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,cAAhC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,UAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,EAAV,QAAUA,EAAV;AAAA,MAAcC,IAAd,QAAcA,IAAd;AAAA,MAAoBC,UAApB,QAAoBA,UAApB;AAAA,MAAgCC,KAAhC,QAAgCA,KAAhC;AAAA,MAAuCC,MAAvC,QAAuCA,MAAvC;AAAA,MAAkDC,KAAlD;;AAAA,SACf,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAC,EAAD,EAAK,EAAL,CAAV;AAAoB,IAAA,EAAE,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAxB;AAAiC,IAAA,aAAa,EAAC,QAA/C;AAAwD,IAAA,KAAK,EAAEF;AAA/D,KACGJ,KAAK,IACJ,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC;AAAjB,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEC;AAApB,KAAyBE,UAAU,GAAGH,KAAK,GAAG,GAAX,GAAiBA,KAApD,CADF,CAFJ,EAME,MAAC,SAAD;AAAW,IAAA,EAAE,EAAEC,EAAf;AAAmB,IAAA,IAAI,EAAEC;AAAzB,KAAmCI,KAAnC,EANF,EAOG,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,4BAAAA,MAAM,CAAGH,IAAH,CAAN,8DAAgBK,OAAhB,KAA2B,MAAC,MAAD,QAASF,MAAT,aAASA,MAAT,wCAASA,MAAM,CAAGH,IAAH,CAAf,kDAAS,cAAgBK,OAAzB,CAP9B,CADe;AAAA,CAAjB;;AAYAR,QAAQ,CAACS,SAAT,GAAqB;AACnBR,EAAAA,KAAK,EAAEN,SAAS,CAACe,MADE;AAEnBR,EAAAA,EAAE,EAAEP,SAAS,CAACe,MAAV,CAAiBN,UAFF;AAGnBD,EAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBN,UAHJ;AAInBA,EAAAA,UAAU,EAAET,SAAS,CAACgB,IAJH;AAKnBN,EAAAA,KAAK,EAAEV,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACkB,MAAX,EAAmBlB,SAAS,CAACmB,KAA7B,CAApB,CALY;AAMnBR,EAAAA,MAAM,EAAEX,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACoB,MAAX,EAAmBpB,SAAS,CAACgB,IAA7B,CAApB;AANW,CAArB;AASAX,QAAQ,CAACgB,YAAT,GAAwB;AACtBf,EAAAA,KAAK,EAAE,EADe;AAEtBG,EAAAA,UAAU,EAAE,KAFU;AAGtBC,EAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,IAAI,CAAR,CAHe;AAItBC,EAAAA,MAAM,EAAE;AAJc,CAAxB;AAOA,eAAeN,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Styling\nimport { Flex, FormLabel } from '../../styles';\nimport { STextArea, SError } from './styles';\n\nconst TextArea = ({ label, id, name, isRequired, width, errors, ...props }) => (\n  <Flex my={[15, 30]} px={[0, 25]} flexDirection=\"column\" width={width}>\n    {label && (\n      <Flex alignItems=\"center\">\n        <FormLabel htmlFor={id}>{isRequired ? label + '*' : label}</FormLabel>\n      </Flex>\n    )}\n    <STextArea id={id} name={name} {...props} />\n    {errors?.[name]?.message && <SError>{errors?.[name]?.message}</SError>}\n  </Flex>\n);\n\nTextArea.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.array]),\n  errors: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\n\nTextArea.defaultProps = {\n  label: '',\n  isRequired: false,\n  width: [1, 1 / 2],\n  errors: false,\n};\n\nexport default TextArea;\n"]},"metadata":{},"sourceType":"module"}