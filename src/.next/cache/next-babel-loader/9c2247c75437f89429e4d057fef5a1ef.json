{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Styling\n\nimport { Flex, FormLabel } from '../../styles';\nimport STextInput, { SError } from './styles';\n\nvar TextInput = function TextInput(_ref) {\n  var _errors$name, _errors$name2;\n\n  var label = _ref.label,\n      name = _ref.name,\n      isRequired = _ref.isRequired,\n      width = _ref.width,\n      errors = _ref.errors,\n      props = _objectWithoutProperties(_ref, [\"label\", \"name\", \"isRequired\", \"width\", \"errors\"]);\n\n  return __jsx(Flex, {\n    mb: [15, 30],\n    mt: [15, 0],\n    px: [0, 25],\n    flexDirection: \"column\",\n    width: width\n  }, label && __jsx(Flex, {\n    alignItems: \"center\"\n  }, __jsx(FormLabel, {\n    htmlFor: name\n  }, isRequired ? label + '*' : label)), __jsx(STextInput, _extends({\n    name: name\n  }, props)), (errors === null || errors === void 0 ? void 0 : (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message) && __jsx(SError, null, errors === null || errors === void 0 ? void 0 : (_errors$name2 = errors[name]) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message));\n};\n\nTextInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.array]),\n  errors: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n};\nTextInput.defaultProps = {\n  label: '',\n  isRequired: false,\n  width: [1, 1 / 2],\n  errors: false\n};\nexport default TextInput;","map":{"version":3,"sources":["/Users/stefwinterswijk/Werk/dept/src/components/Form/Fields/TextInput.jsx"],"names":["React","PropTypes","Flex","FormLabel","STextInput","SError","TextInput","label","name","isRequired","width","errors","props","message","propTypes","string","bool","oneOfType","number","array","object","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,cAAhC;AACA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,UAAnC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,IAAV,QAAUA,IAAV;AAAA,MAAgBC,UAAhB,QAAgBA,UAAhB;AAAA,MAA4BC,KAA5B,QAA4BA,KAA5B;AAAA,MAAmCC,MAAnC,QAAmCA,MAAnC;AAAA,MAA8CC,KAA9C;;AAAA,SAChB,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAC,EAAD,EAAK,EAAL,CAAV;AAAoB,IAAA,EAAE,EAAE,CAAC,EAAD,EAAK,CAAL,CAAxB;AAAiC,IAAA,EAAE,EAAE,CAAC,CAAD,EAAI,EAAJ,CAArC;AAA8C,IAAA,aAAa,EAAC,QAA5D;AAAqE,IAAA,KAAK,EAAEF;AAA5E,KACGH,KAAK,IACJ,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC;AAAjB,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEC;AAApB,KAA2BC,UAAU,GAAGF,KAAK,GAAG,GAAX,GAAiBA,KAAtD,CADF,CAFJ,EAME,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEC;AAAlB,KAA4BI,KAA5B,EANF,EAOG,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,4BAAAA,MAAM,CAAGH,IAAH,CAAN,8DAAgBK,OAAhB,KAA2B,MAAC,MAAD,QAASF,MAAT,aAASA,MAAT,wCAASA,MAAM,CAAGH,IAAH,CAAf,kDAAS,cAAgBK,OAAzB,CAP9B,CADgB;AAAA,CAAlB;;AAYAP,SAAS,CAACQ,SAAV,GAAsB;AACpBP,EAAAA,KAAK,EAAEN,SAAS,CAACc,MADG;AAEpBP,EAAAA,IAAI,EAAEP,SAAS,CAACc,MAAV,CAAiBN,UAFH;AAGpBA,EAAAA,UAAU,EAAER,SAAS,CAACe,IAHF;AAIpBN,EAAAA,KAAK,EAAET,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACiB,MAAX,EAAmBjB,SAAS,CAACkB,KAA7B,CAApB,CAJa;AAKpBR,EAAAA,MAAM,EAAEV,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACmB,MAAX,EAAmBnB,SAAS,CAACe,IAA7B,CAApB;AALY,CAAtB;AAQAV,SAAS,CAACe,YAAV,GAAyB;AACvBd,EAAAA,KAAK,EAAE,EADgB;AAEvBE,EAAAA,UAAU,EAAE,KAFW;AAGvBC,EAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,IAAI,CAAR,CAHgB;AAIvBC,EAAAA,MAAM,EAAE;AAJe,CAAzB;AAOA,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Styling\nimport { Flex, FormLabel } from '../../styles';\nimport STextInput, { SError } from './styles';\n\nconst TextInput = ({ label, name, isRequired, width, errors, ...props }) => (\n  <Flex mb={[15, 30]} mt={[15, 0]} px={[0, 25]} flexDirection=\"column\" width={width}>\n    {label && (\n      <Flex alignItems=\"center\">\n        <FormLabel htmlFor={name}>{isRequired ? label + '*' : label}</FormLabel>\n      </Flex>\n    )}\n    <STextInput name={name} {...props} />\n    {errors?.[name]?.message && <SError>{errors?.[name]?.message}</SError>}\n  </Flex>\n);\n\nTextInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.array]),\n  errors: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\n\nTextInput.defaultProps = {\n  label: '',\n  isRequired: false,\n  width: [1, 1 / 2],\n  errors: false,\n};\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}