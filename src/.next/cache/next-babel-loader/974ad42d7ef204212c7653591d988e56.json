{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { css } from 'styled-components';\nimport { breakpoints } from '../theme';\nvar labels = ['small', 'medium', 'large'];\nvar mediaMin = breakpoints.reduce(function (acc, cur, i) {\n  acc[labels[i]] = function () {\n    return css([\"@media (min-width:\", \"px){\", \";}\"], cur, css.apply(void 0, arguments));\n  };\n\n  return acc;\n}, {});\nvar mediaMax = breakpoints.reduce(function (acc, cur, i, sizes) {\n  acc[\"\".concat(labels[i], \"Down\")] = function () {\n    return css([\"@media (max-width:\", \"px){\", \";}\"], cur - 1, css.apply(void 0, arguments));\n  };\n\n  acc[\"\".concat(labels[i], \"Only\")] = function () {\n    return i > 0 ? css([\"@media screen and (min-width:\", \"px) and (max-width:\", \"px){\", \";}\"], sizes[i - 1], cur - 1, css.apply(void 0, arguments)) : css([\"@media screen and (max-width:\", \"px){\", \";}\"], cur - 1, css.apply(void 0, arguments));\n  };\n\n  return acc;\n}, {});\n\nvar media = _objectSpread({}, mediaMin, {}, mediaMax);\n/* Write you media queries like this:\n\n   ${media.mediumDown`\n      background: red;\n   `}\n\n*/\n\n\nvar showClasses = breakpoints.reduce(function (acc, cur, i) {\n  acc.push(\"\\n    .show-for-\".concat(labels[i], \" {\\n      @media (max-width: \").concat(cur - 1, \"px) {\\n        display: none!important;\\n      }\\n    }\\n  \"));\n  return acc;\n}, []);\nvar hideClasses = breakpoints.reduce(function (acc, cur, i) {\n  acc.push(\"\\n    .hide-for-\".concat(labels[i], \" {\\n      @media (min-width: \").concat(cur, \"px) {\\n        display: none!important;\\n      }\\n    }\\n  \"));\n  return acc;\n}, []);\nexport { showClasses, hideClasses };\nexport default media;","map":null,"metadata":{},"sourceType":"module"}