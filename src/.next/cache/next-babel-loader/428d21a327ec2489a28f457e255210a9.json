{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Styling\n\nimport { Flex, FormLabel } from '../../styles';\nimport STextInput, { SError } from './styles';\n\nvar Email = function Email(_ref) {\n  var label = _ref.label,\n      id = _ref.id,\n      name = _ref.name,\n      isRequired = _ref.isRequired,\n      errorMessage = _ref.errorMessage,\n      width = _ref.width,\n      register = _ref.register,\n      errors = _ref.errors,\n      props = _objectWithoutProperties(_ref, [\"label\", \"id\", \"name\", \"isRequired\", \"errorMessage\", \"width\", \"register\", \"errors\"]);\n\n  return __jsx(Flex, {\n    mb: [15, 30],\n    mt: [15, 0],\n    px: [0, 25],\n    flexDirection: \"column\",\n    width: width\n  }, label && __jsx(Flex, {\n    alignItems: \"center\"\n  }, __jsx(FormLabel, {\n    htmlFor: id\n  }, isRequired ? label + '*' : label)), __jsx(STextInput, _extends({\n    id: id,\n    name: name,\n    ref: register({\n      required: 'Required',\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: 'invalid email address'\n      }\n    })\n  }, props)), (errors === null || errors === void 0 ? void 0 : errors.email) && __jsx(SError, null, errorMessage.required), errorMessage && touched && value && !isValid && __jsx(SError, null, errorMessage.email));\n};\n\nEmail.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  errorMessage: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.array]),\n  register: PropTypes.func.isRequired,\n  errors: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n};\nEmail.defaultProps = {\n  label: '',\n  isRequired: false,\n  errorMessage: {},\n  width: [1, 1 / 2],\n  errors: false\n};\nexport default Email;","map":{"version":3,"sources":["/Users/stefwinterswijk/Werk/dept/src/components/Form/Fields/Email.jsx"],"names":["React","PropTypes","Flex","FormLabel","STextInput","SError","Email","label","id","name","isRequired","errorMessage","width","register","errors","props","required","pattern","value","message","email","touched","isValid","propTypes","string","bool","object","oneOfType","number","array","func","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,cAAhC;AACA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,UAAnC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAUR;AAAA,MATJC,KASI,QATJA,KASI;AAAA,MARJC,EAQI,QARJA,EAQI;AAAA,MAPJC,IAOI,QAPJA,IAOI;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADDC,KACC;;AACJ,SACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAC,EAAD,EAAK,EAAL,CAAV;AAAoB,IAAA,EAAE,EAAE,CAAC,EAAD,EAAK,CAAL,CAAxB;AAAiC,IAAA,EAAE,EAAE,CAAC,CAAD,EAAI,EAAJ,CAArC;AAA8C,IAAA,aAAa,EAAC,QAA5D;AAAqE,IAAA,KAAK,EAAEH;AAA5E,KACGL,KAAK,IACJ,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC;AAAjB,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEC;AAApB,KAAyBE,UAAU,GAAGH,KAAK,GAAG,GAAX,GAAiBA,KAApD,CADF,CAFJ,EAME,MAAC,UAAD;AACE,IAAA,EAAE,EAAEC,EADN;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,GAAG,EAAEI,QAAQ,CAAC;AACZG,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,2CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFG,KAAD;AAHf,KAUMJ,KAVN,EANF,EAkBG,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEM,KAAR,KAAiB,MAAC,MAAD,QAAST,YAAY,CAACK,QAAtB,CAlBpB,EAmBGL,YAAY,IAAIU,OAAhB,IAA2BH,KAA3B,IAAoC,CAACI,OAArC,IAAgD,MAAC,MAAD,QAASX,YAAY,CAACS,KAAtB,CAnBnD,CADF;AAuBD,CAlCD;;AAoCAd,KAAK,CAACiB,SAAN,GAAkB;AAChBhB,EAAAA,KAAK,EAAEN,SAAS,CAACuB,MADD;AAEhBhB,EAAAA,EAAE,EAAEP,SAAS,CAACuB,MAAV,CAAiBd,UAFL;AAGhBA,EAAAA,UAAU,EAAET,SAAS,CAACwB,IAHN;AAIhBd,EAAAA,YAAY,EAAEV,SAAS,CAACyB,MAJR;AAKhBd,EAAAA,KAAK,EAAEX,SAAS,CAAC0B,SAAV,CAAoB,CAAC1B,SAAS,CAAC2B,MAAX,EAAmB3B,SAAS,CAAC4B,KAA7B,CAApB,CALS;AAMhBhB,EAAAA,QAAQ,EAAEZ,SAAS,CAAC6B,IAAV,CAAepB,UANT;AAOhBI,EAAAA,MAAM,EAAEb,SAAS,CAAC0B,SAAV,CAAoB,CAAC1B,SAAS,CAACyB,MAAX,EAAmBzB,SAAS,CAACwB,IAA7B,CAApB;AAPQ,CAAlB;AAUAnB,KAAK,CAACyB,YAAN,GAAqB;AACnBxB,EAAAA,KAAK,EAAE,EADY;AAEnBG,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,IAAI,CAAR,CAJY;AAKnBE,EAAAA,MAAM,EAAE;AALW,CAArB;AAQA,eAAeR,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Styling\nimport { Flex, FormLabel } from '../../styles';\nimport STextInput, { SError } from './styles';\n\nconst Email = ({\n  label,\n  id,\n  name,\n  isRequired,\n  errorMessage,\n  width,\n  register,\n  errors,\n  ...props\n}) => {\n  return (\n    <Flex mb={[15, 30]} mt={[15, 0]} px={[0, 25]} flexDirection=\"column\" width={width}>\n      {label && (\n        <Flex alignItems=\"center\">\n          <FormLabel htmlFor={id}>{isRequired ? label + '*' : label}</FormLabel>\n        </Flex>\n      )}\n      <STextInput\n        id={id}\n        name={name}\n        ref={register({\n          required: 'Required',\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n            message: 'invalid email address',\n          },\n        })}\n        {...props}\n      />\n      {errors?.email && <SError>{errorMessage.required}</SError>}\n      {errorMessage && touched && value && !isValid && <SError>{errorMessage.email}</SError>}\n    </Flex>\n  );\n};\n\nEmail.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  errorMessage: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.array]),\n  register: PropTypes.func.isRequired,\n  errors: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\n\nEmail.defaultProps = {\n  label: '',\n  isRequired: false,\n  errorMessage: {},\n  width: [1, 1 / 2],\n  errors: false,\n};\n\nexport default Email;\n"]},"metadata":{},"sourceType":"module"}