{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport { useForm } from 'react-hook-form'; // Inputs\n\nimport { TextInput, TextArea, Email } from './Fields'; // Styling\n\nimport { Box, Button, Flex } from '../styles';\nimport theme from '../../theme';\n\nvar Form = function Form(_ref) {\n  var fields = _ref.fields,\n      button = _ref.button,\n      onSubmit = _ref.onSubmit;\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  console.log(errors);\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"label\", {\n    htmlFor: \"firstName\"\n  }, \"First Name\"), __jsx(\"input\", {\n    name: \"firstName\",\n    placeholder: \"Bill\",\n    ref: register({\n      required: 'this is a required',\n      maxLength: {\n        value: 2,\n        message: 'Max length is 2'\n      }\n    })\n  }), __jsx(\"br\", null), errors.firstName && errors.firstName.message, __jsx(\"br\", null), __jsx(\"label\", {\n    htmlFor: \"lastName\"\n  }, \"Last Name\"), __jsx(\"input\", {\n    name: \"lastName\",\n    placeholder: \"Luo\",\n    ref: register({\n      required: 'this is required',\n      minLength: {\n        value: 2,\n        message: 'Min length is 2'\n      }\n    })\n  }), __jsx(\"br\", null), errors.lastName && errors.lastName.message, __jsx(\"br\", null), __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email\"), __jsx(\"input\", {\n    name: \"email\",\n    placeholder: \"bluebill1049@hotmail.com\",\n    type: \"text\",\n    ref: register({\n      required: 'this is required',\n      pattern: {\n        value: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n        message: 'Invalid email address'\n      }\n    })\n  }), __jsx(\"br\", null), errors.email && errors.email.message, __jsx(\"br\", null), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Submit\"));\n};\n\nForm.propTypes = {\n  fields: PropTypes.arrayOf(PropTypes.object).isRequired,\n  button: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\nexport default Form;","map":{"version":3,"sources":["/Users/stefwinterswijk/Werk/dept/src/components/Form/Form.jsx"],"names":["React","PropTypes","uuid","useForm","TextInput","TextArea","Email","Box","Button","Flex","theme","Form","fields","button","onSubmit","handleSubmit","register","errors","console","log","required","maxLength","value","message","firstName","minLength","lastName","pattern","email","propTypes","arrayOf","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,KAA9B,QAA2C,UAA3C,C,CAEA;;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,QAAkC,WAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAkC;AAAA,MAA/BC,MAA+B,QAA/BA,MAA+B;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,iBACFX,OAAO,EADL;AAAA,MACrCY,YADqC,YACrCA,YADqC;AAAA,MACvBC,QADuB,YACvBA,QADuB;AAAA,MACbC,MADa,YACbA,MADa;;AAG7CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,SACE;AAAM,IAAA,QAAQ,EAAEF,YAAY,CAACD,QAAD;AAA5B,KACI;AAAO,IAAA,OAAO,EAAC;AAAf,kBADJ,EAEI;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,GAAG,EAAEE,QAAQ,CAAC;AACZI,MAAAA,QAAQ,EAAE,oBADE;AAEZC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,OAAO,EAAE;AAFA;AAFC,KAAD;AAHf,IAFJ,EAaI,iBAbJ,EAcKN,MAAM,CAACO,SAAP,IAAoBP,MAAM,CAACO,SAAP,CAAiBD,OAd1C,EAeI,iBAfJ,EAiBI;AAAO,IAAA,OAAO,EAAC;AAAf,iBAjBJ,EAkBI;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,KAFd;AAGE,IAAA,GAAG,EAAEP,QAAQ,CAAC;AACZI,MAAAA,QAAQ,EAAE,kBADE;AAEZK,MAAAA,SAAS,EAAE;AACTH,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,OAAO,EAAE;AAFA;AAFC,KAAD;AAHf,IAlBJ,EA6BI,iBA7BJ,EA8BKN,MAAM,CAACS,QAAP,IAAmBT,MAAM,CAACS,QAAP,CAAgBH,OA9BxC,EA+BI,iBA/BJ,EAiCI;AAAO,IAAA,OAAO,EAAC;AAAf,aAjCJ,EAkCI;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,0BAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,GAAG,EAAEP,QAAQ,CAAC;AACZI,MAAAA,QAAQ,EAAE,kBADE;AAEZO,MAAAA,OAAO,EAAE;AACPL,QAAAA,KAAK,EAAE,sEADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFG,KAAD;AAJf,IAlCJ,EA8CI,iBA9CJ,EA+CKN,MAAM,CAACW,KAAP,IAAgBX,MAAM,CAACW,KAAP,CAAaL,OA/ClC,EAgDI,iBAhDJ,EAiDI;AAAQ,IAAA,IAAI,EAAC;AAAb,cAjDJ,CADF;AAqDD,CA1DD;;AA4DAZ,IAAI,CAACkB,SAAL,GAAiB;AACfjB,EAAAA,MAAM,EAAEX,SAAS,CAAC6B,OAAV,CAAkB7B,SAAS,CAAC8B,MAA5B,EAAoCC,UAD7B;AAEfnB,EAAAA,MAAM,EAAEZ,SAAS,CAAC8B,MAAV,CAAiBC,UAFV;AAGflB,EAAAA,QAAQ,EAAEb,SAAS,CAACgC,IAAV,CAAeD;AAHV,CAAjB;AAMA,eAAerB,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport { useForm } from 'react-hook-form';\n\n// Inputs\nimport { TextInput, TextArea, Email } from './Fields';\n\n// Styling\nimport { Box, Button, Flex } from '../styles';\nimport theme from '../../theme';\n\nconst Form = ({ fields, button, onSubmit }) => {\n  const { handleSubmit, register, errors } = useForm();\n\n  console.log(errors);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          name=\"firstName\"\n          placeholder=\"Bill\"\n          ref={register({\n            required: 'this is a required',\n            maxLength: {\n              value: 2,\n              message: 'Max length is 2',\n            },\n          })}\n        />\n        <br />\n        {errors.firstName && errors.firstName.message}\n        <br />\n\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          name=\"lastName\"\n          placeholder=\"Luo\"\n          ref={register({\n            required: 'this is required',\n            minLength: {\n              value: 2,\n              message: 'Min length is 2',\n            },\n          })}\n        />\n        <br />\n        {errors.lastName && errors.lastName.message}\n        <br />\n\n        <label htmlFor=\"email\">Email</label>\n        <input\n          name=\"email\"\n          placeholder=\"bluebill1049@hotmail.com\"\n          type=\"text\"\n          ref={register({\n            required: 'this is required',\n            pattern: {\n              value: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n              message: 'Invalid email address',\n            },\n          })}\n        />\n        <br />\n        {errors.email && errors.email.message}\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n  );\n};\n\nForm.propTypes = {\n  fields: PropTypes.arrayOf(PropTypes.object).isRequired,\n  button: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}