{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // Utils\n\nimport { isEmail } from '../../../utils'; // Styling\n\nimport { Flex, FormLabel } from '../../styles';\nimport STextInput, { SError } from './styles';\n\nvar Email = function Email(_ref) {\n  var label = _ref.label,\n      id = _ref.id,\n      name = _ref.name,\n      isRequired = _ref.isRequired,\n      errorMessage = _ref.errorMessage,\n      width = _ref.width,\n      register = _ref.register,\n      errors = _ref.errors,\n      props = _objectWithoutProperties(_ref, [\"label\", \"id\", \"name\", \"isRequired\", \"errorMessage\", \"width\", \"register\", \"errors\"]);\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(true),\n      isValid = _useState2[0],\n      setIsValid = _useState2[1];\n\n  var _useState3 = useState(false),\n      touched = _useState3[0],\n      setTouched = _useState3[1];\n\n  return __jsx(Flex, {\n    mb: [15, 30],\n    mt: [15, 0],\n    px: [0, 25],\n    flexDirection: \"column\",\n    width: width\n  }, label && __jsx(Flex, {\n    alignItems: \"center\"\n  }, __jsx(FormLabel, {\n    htmlFor: id\n  }, isRequired ? label + '*' : label)), __jsx(STextInput, _extends({\n    id: id,\n    name: name,\n    ref: register({\n      required: 'Required',\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: 'invalid email address'\n      }\n    })\n  }, props)), (errors === null || errors === void 0 ? void 0 : errors.email) && __jsx(SError, null, errorMessage.required), errorMessage && touched && value && !isValid && __jsx(SError, null, errorMessage.email));\n};\n\nEmail.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  errorMessage: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.array])\n};\nEmail.defaultProps = {\n  label: '',\n  isRequired: false,\n  errorMessage: {},\n  width: [1, 1 / 2]\n};\nexport default Email;","map":{"version":3,"sources":["/Users/stefwinterswijk/Werk/dept/src/components/Form/Fields/Email.jsx"],"names":["React","useState","PropTypes","isEmail","Flex","FormLabel","STextInput","SError","Email","label","id","name","isRequired","errorMessage","width","register","errors","props","value","setValue","isValid","setIsValid","touched","setTouched","required","pattern","message","email","propTypes","string","bool","object","oneOfType","number","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Utils\nimport { isEmail } from '../../../utils';\n\n// Styling\nimport { Flex, FormLabel } from '../../styles';\nimport STextInput, { SError } from './styles';\n\nconst Email = ({\n  label,\n  id,\n  name,\n  isRequired,\n  errorMessage,\n  width,\n  register,\n  errors,\n  ...props\n}) => {\n  const [value, setValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const [touched, setTouched] = useState(false);\n\n  return (\n    <Flex mb={[15, 30]} mt={[15, 0]} px={[0, 25]} flexDirection=\"column\" width={width}>\n      {label && (\n        <Flex alignItems=\"center\">\n          <FormLabel htmlFor={id}>{isRequired ? label + '*' : label}</FormLabel>\n        </Flex>\n      )}\n      <STextInput\n        id={id}\n        name={name}\n        ref={register({\n          required: 'Required',\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n            message: 'invalid email address',\n          },\n        })}\n        {...props}\n      />\n      {errors?.email && <SError>{errorMessage.required}</SError>}\n      {errorMessage && touched && value && !isValid && <SError>{errorMessage.email}</SError>}\n    </Flex>\n  );\n};\n\nEmail.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n  errorMessage: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.array]),\n};\n\nEmail.defaultProps = {\n  label: '',\n  isRequired: false,\n  errorMessage: {},\n  width: [1, 1 / 2],\n};\n\nexport default Email;\n"]},"metadata":{},"sourceType":"module"}