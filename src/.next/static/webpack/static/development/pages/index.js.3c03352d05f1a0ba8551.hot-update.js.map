{"version":3,"file":"static/webpack/static/development/pages/index.js.3c03352d05f1a0ba8551.hot-update.js","sources":["webpack:///./components/Form/Form.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport { useForm } from 'react-hook-form';\n\n// Inputs\nimport { TextInput, TextArea, Email } from './Fields';\n\n// Styling\nimport { Box, Button, Flex } from '../styles';\nimport theme from '../../theme';\n\nconst Form = ({ fields, button, onSubmit }) => {\n  const { handleSubmit, register, errors } = useForm();\n\n  console.log(errors);\n\n  return (\n    <Box as=\"form\" onSubmit={handleSubmit(onSubmit)}>\n      {fields && (\n        <Flex flexWrap=\"wrap\">\n          {fields.map(field => {\n            switch (field.type) {\n              case 'text':\n                return (\n                  <TextInput\n                    key={uuid()}\n                    ref={register({ required: field.isRequired && field.errorMessage?.required })}\n                    errors={errors}\n                    {...field}\n                  />\n                );\n\n              case 'textarea':\n                return (\n                  <TextArea\n                    key={uuid()}\n                    ref={register({ required: field.isRequired && field.errorMessage?.required })}\n                    errors={errors}\n                    {...field}\n                  />\n                );\n\n              case 'email':\n                return (\n                  <Email\n                    key={uuid()}\n                    ref={register({\n                      required: field.isRequired && field.errorMessage?.required,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                        message: field.errorMessage?.email,\n                      },\n                    })}\n                    errors={errors}\n                    {...field}\n                  />\n                );\n\n              default:\n                console.warn('missing layout for', field.type);\n                return null;\n            }\n          })}\n        </Flex>\n      )}\n      {button && (\n        <Box ml={[0, 25]} mt={[15, 30]}>\n          <Button type={button.type} bg={theme.colors.blue}>\n            {button.text}\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nForm.propTypes = {\n  fields: PropTypes.arrayOf(PropTypes.object).isRequired,\n  button: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AACA;AAOA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AATA;AACA;AAaA;AACA;AACA;AAvCA;AAyCA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;;;;A","sourceRoot":""}